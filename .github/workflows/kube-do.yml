name: kube-do

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/kube-*.yml'
      - 'clusters/kube-*.yaml'

jobs:
  # EXAMPLE: how to manage simple cluster provisioning
  kube-do-provision-only-disabled:
    name: Simple provision
    runs-on: ubuntu-latest
    steps:
      - name: Provision
        uses: hckops/actions/kube-do-action@main
        id: provision
        with:
          github-token: ${{ github.token }}
          access-token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          config-path: clusters/kube-do-sample.yaml
          enabled: false
      - name: Status
        run: echo "Cluster status ${{ steps.provision.outputs.status }}"

  # EXAMPLE: how to provision a cluster and bootstrap a platform
  kube-do-sample:
    name: Provision and bootstrap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Provision
        # TODO use tag
        uses: hckops/actions/kube-do-action@main
        id: provision
        with:
          github-token: ${{ github.token }}
          access-token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          config-path: clusters/kube-do-sample.yaml
          enabled: true
          wait: true

      - name: Output
        run: |
          echo "Status: ${{ steps.provision.outputs.status }}"
          echo "KubeConfig: ${{ steps.provision.outputs.kubeconfig }}"
      
      - name: Bootstrap
        # TODO this is NOT working ??? returns alway true
        if: ${{ steps.provision.outputs.status == 'CREATE' }}"
        # TODO use tag
        uses: hckops/actions/bootstrap-action@main
        with:
          kubeconfig: ${{ steps.provision.outputs.kubeconfig }}

      - name: Notification
        # TODO use tag
        uses: hckops/actions/discord-action@main
        with:
          action: create-message
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: "Cluster ${{ github.repository }}: ${{ steps.provision.outputs.status }}"
